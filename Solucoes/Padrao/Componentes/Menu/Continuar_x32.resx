<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>