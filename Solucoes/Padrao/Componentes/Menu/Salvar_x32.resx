<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>