<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABD9JREFUWEfFl29MU1cUwE+L3Zu8AhUVUMeyqYtbIk7jn7jinzFRMjbECAiBWmkm
        CBEqNgPEyHQatxAT5/5kcUpAmcaPRg1ToyEEYYaBH3CCJGxIrEEJlI20Zn4YOzv3vfb5gPteiKH64dfy
        zr333N+9t/eUAiK+UrjBlwk3qEXpObjqPAOowb+us3DB+UOIgTdWC26QR/l5EPfWAfY/O4i+/6on0Ost
        xeIa8CXng4k3XgtukEcZCZTQSu+O7MCHvmJ0+/Yo9PmK8M5wDu4+DT4wgHmBFSa9C9wgD9p+0VlLAt5c
        7Pl7O/6pgj0zgYJT8BQALHPjwMjLwYMb5PF5HYhF1doC7SSQf1ISmBH1bhAE9p4BsfCUvsDOH2WBWYuC
        ILCnBsRdJ/UFHN/LAtHvBUGg8CcQaYW6AvYTssDS1BcUcNWGhpXXWcIqz0eFVV6IVmAxV+302bRC7KBb
        0P2XDXtowgDsuc2TjbbjJDAdYu1fvh5RcJzl8eeg94qfI8NcNaJZPR9D+YMG33N8B6hHPu1AB622y5M1
        hk6avG0oC3O/5Y8LwNrt38Bl+1GTck2lF2oQso8B9j3dh14qKlqMjJ6mGlCG9wYz8ffBDIXOoWyqBxXo
        pXbeOInRajqqEtxWBf+s2gqvjRU4AUJmFWA7bWWXJw/ve/I16RjIwjuPt07g7kAOt3+ATs9n2Eq7lPYV
        PKPPiTlmqVysJAHaFiH9a8A2Os/W/lRsfZQy9VDe27RzqYclgRmWhfIHVRLIOQbCliOArXSWze5P8dbD
        5CmH5W0Z3IYphySBSPNbKoGsKhA2HwK8TVvU2JeEDb0bp5zGvo+x+UkGJlfKAmKsSiDtKAiffAHYMpSJ
        jWTaQMZa3KBk13s+msDN3k3c/gEa6RianqTjpv2yQOgbKoGUgyAkHQD8bcSO7T6HLm3eHfgLTVjfvU7h
        2h8bKJ7L7a+mxZODG8olAYtplkqAkVgGVxNKAfUge2ymc7zSvR4vda1RqO9JwIb+NO6YcYzGZcIVEjAb
        IlS3gLHaBkZqCCVmEjHEnHEsSCwHbBpIx0v31+LFTqvCZdqFm4+24NoSqRS/Q8xVjVMTRYSbZj7/p0UR
        kB4iJIlpfkwBjJFgmp8AFrYKdo5aAvFOSWA2IajHq2B5Q4ixlXAyWPNAXOfSF1hdJH8ZsYXwcvDgBnkk
        VRjENSX6AisLZYGQ6CAIbNxnEK1OfYHlu4IokFhmEGmLdQWW5ckCxqggCKx3gbhyN+CtgQy8RkWnnu5+
        gOsPkiSBJTtlAYP/jk8GbpBHfDGIKwq0i1UTfUvGOSQBC4RPoYDNZmPXx0LMW7Idfl3sANRgdN6H0ED9
        YolIq9Uq8PKNhxscHh420MQiJWIFiSV8m2GcJhWZxcRywkrE+98/IFYR71MlYX1Y/zeJGBIJd7vdmj9U
        uEE9qFZyi5X/mbVpTsaDG3x5IPwPA/H9ytz4om8AAAAASUVORK5CYII=
</value>
  </data>
</root>